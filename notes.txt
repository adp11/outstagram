                                        SETUP STEPS
1. npx create-react-app superchat-firebase
2. npm install eslint --save-dev -> npm init @eslint/config
3. "rules": {
        "linebreak-style": "off",
        "no-console": "error",
        "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }]
    }

4. npm install --save-dev style-loader css-loader
5. {
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },
  "eslint.validate": ["javascript"]
}

6. set up tailwind
npm install -D tailwindcss
npx tailwindcss init
"build:css": "tailwind build -i src/style.css -o dist/style.css --watch"
<link> html file

7. set up firebase
8. <script src="https://kit.fontawesome.com/c397ae2491.js" crossorigin="anonymous"></script>
9. <link rel="shortcut icon" type="image/x-icon" href="../img/title-icon.png" />
10. "plugins": [
        "react",
        "only-warn"
    ],
    

                                        BUG FIXES - FIRST BATCH
view visitedProfile -> view full post --> selfProfile background bug - FIXED
operations on fullpost from visitedProfile bug - FIXED

comment seconds bug - FIXED
scroll bug - FIXED
postSnippet bug - FIXED 

computeHowLongAgo - FIXED
order posts when popups on and not on bug - FIXED
add post real time bug - FIXED
include own posts bug - FIXED

small UI fix (loading, editprofile form) - commit separate - FIXED
red heart liked - FIXED
editProfile (3 fields) - FIXED 
follow button beside username in fullpost - REMOVED
link profile from newsfeed - FIXED

======>>>>>>> update across posts (editProfile) - FIXED
follow/unfollow display UI bug -- FIXED (need follow-up)
view like list - ADDED
view following/follower list - ADDED
deletePost - ADDED
notif - ADDED
replace getAuth() - FIXED

added orderBy to notifs - FIXED
routing/direct link access - FIXED

stimulate reall app flow FOR THE FIRST TIME to check what's lacking, what's to be CRUD-ed - DONE
add clipboard - ADDED
handleImageSize when full post - ADDED

                                        BUG FIXES - SECOND BATCH (new branch - chat feature)
visit profile in full chat header and back bug - FIXED
routing bug (/chat FIXED, /chat/:roomId FIXED)
editprofile -> update rooms - ADDED
chat notifications - ADDED

popups folder, outstagram - DONE
google photoURL bug - UNSEEN
fix operations on abrupt access full post - FIXED
(windy effects while waiting for pics) - FIXED
post comment enter - FIXED

rigorous manual test + last bug batch fixes (if any) + (clean up codebase + good document) - DONE
toggle theme - ADDED

last bug bulk:
third button on post - DONE
visit profile in active chats header - DONE
edit profile -> no updates in search box (fetchAllUserData() again) - DONE
add post -> no updates in totalPosts --> updateTpostSnippets (immutable) - DONE

after advanced CSS:
search results overflow (fixed), hover post snippets (fixed), fix footer
make UI clean - DONE
project presentation on Github for resume (folder structure, readme)
hosting service (netlify)

after backend:
add more realtime listening, less dependent on client data/frontend update logic - DONE
1st quick real app flow test
select what to public/hide
rigorous manual testing again
remove unused npm pkgs to be lightweight

                                        TRIVIAL/IGNORED/NOT IMPLEMENTED:
add post small image container resize 
nav popups auto closed 
shortcut icon bug - /p/:postId route not found (UNSEEN IN PRODUCTION)
fullpost on --> previewprofile + nav lost bug 
follow/unfollow button next to authorUsername in FullPost
delete chat
message button from profile
forward link post to a friend in chat (third button on post)


                                        NOTES ABOUT THIS APP:
stimulate real app flow with more users (5+)
could've reused functions across components and states (notice parent-children passing and the hiearchy)
could've added more realtime listening for remote db (e.g. userData, allUserData, and some more), depended less on client data (FIXED)
could've added limit, orderBy in Firebase but please notice a) detachments/memory leaks and b) potential realtime listening bug (e.g. when adding) (because only a set number of items inside the collection is being listened, but not the entire collection)
could've made styling rules more organized and systematic

--backend
could've used async/await more and avoided callback hell
could've handled errors more properly
could've been more conditional/specific when emitting realtime data from backend (both for userDataChange and newsfeedChange). could've not used mongodb change stream at all; io.emit after operations in controllers
could've chosen what fields to load and leave when fetching (only load data that are needed/clicked)
could've been more thoughtful for querying

code clean while building (don't EVER save for later)
avoid long breaks (10+ days) at all costs 
